server.port=8082
#H2 Database
#spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:test
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update

spring.datasource.url=jdbc:postgresql://localhost:5432/job
spring.datasource.username=Rahul
spring.datasource.password=Rahul@7879
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Eureka
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
spring.application.name=job-service

#zipkin
management.tracing.sampling.probability=1.0

# Config server
spring.config.import=optional:configserver:http://localhost:8080/
#spring.profiles.active=dev

# Actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details =always


# Resilience4J
resilience4j.circuitbreaker.instances.companyBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.companyBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.companyBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.companyBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.companyBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.companyBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.companyBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.companyBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.companyBreaker.sliding-window-type=count_based

# Retry module
resilience4j.circuitbreaker.instances.companyBreaker.max-attempts = 5
resilience4j.circuitbreaker.instances.companyBreaker.wait-duration=2s


# Rate limiter config
resilience4j.ratelimiter.instances.companyBreaker.timeout-duration = 0
resilience4j.ratelimiter.instances.companyBreaker.limit-refresh-period=4s
resilience4j.ratelimiter.instances.companyBreaker.limit-for-period=2

















